[0m[[0minfo[0m] [0m[32mLab1Spec:[0m[0m
[0m[[0minfo[0m] [0m[32mabs[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to the absolute value of the argument[0m[0m
[0m[[0minfo[0m] [0m[32mxor[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to the exclusive or of the arguments[0m[0m
[0m[[0minfo[0m] [0m[32mrepeat[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to repeated concatenation of a string[0m[0m
[0m[[0minfo[0m] [0m[32mrepeat[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to an empty string when repeated zero times[0m[0m
[0m[[0minfo[0m] [0m[32mrepeat[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an exception when a negative number of repetitions is expected[0m[0m
[0m[[0minfo[0m] [0m[32msqrtStep[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to one iteration of Newton's method[0m[0m
[0m[[0minfo[0m] [0m[32msqrtN[0m[0m
[0m[[0minfo[0m] [0m[32m- should perform several iterations of sqrtStep[0m[0m
[0m[[0minfo[0m] [0m[32msqrtN[0m[0m
[0m[[0minfo[0m] [0m[32m- should evaluate to x0 if n is zero[0m[0m
[0m[[0minfo[0m] [0m[32msqrtErr[0m[0m
[0m[[0minfo[0m] [0m[32m- should perform iterations until the error is within epsilon[0m[0m
[0m[[0minfo[0m] [0m[32msqrtN[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an exception when n is negative[0m[0m
[0m[[0minfo[0m] [0m[32msqrtErr[0m[0m
[0m[[0minfo[0m] [0m[32m- should throw an exception when using a non-positive epsilon[0m[0m
[0m[[0minfo[0m] [0m[32mrepOk[0m[0m
[0m[[0minfo[0m] [0m[31m- should ensure that a SearchTree is properly ordered *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.check$1(Lab1.scala:141)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.repOk(Lab1.scala:143)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$12.apply$mcV$sp(Lab1Spec.scala:116)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$12.apply(Lab1Spec.scala:114)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$12.apply(Lab1Spec.scala:114)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32minsert[0m[0m
[0m[[0minfo[0m] [0m[31m- should insert numbers as leaves in SearchTrees at the proper position *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.insert(Lab1.scala:146)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$13.apply$mcV$sp(Lab1Spec.scala:126)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$13.apply(Lab1Spec.scala:125)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$13.apply(Lab1Spec.scala:125)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mdeleteMin[0m[0m
[0m[[0minfo[0m] [0m[31m- should remove the smallest value from a tree, and provide the resulting tree *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.deleteMin(Lab1.scala:154)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$14.apply$mcV$sp(Lab1Spec.scala:138)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$14.apply(Lab1Spec.scala:134)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$14.apply(Lab1Spec.scala:134)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32mdelete[0m[0m
[0m[[0minfo[0m] [0m[31m- should remove a given value from a tree, if present *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.delete(Lab1.scala:158)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$15.apply$mcV$sp(Lab1Spec.scala:144)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$15.apply(Lab1Spec.scala:143)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$15.apply(Lab1Spec.scala:143)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:20)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32minsert[0m[0m
[0m[[0minfo[0m] [0m[31m- should produce trees that satisfy repOk *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.insert(Lab1.scala:146)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$treeFromList$1.apply(Lab1Spec.scala:160)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$treeFromList$1.apply(Lab1Spec.scala:160)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.immutable.List.foldLeft(List.scala:84)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.TraversableOnce$class.$div$colon(TraversableOnce.scala:138)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.AbstractTraversable.$div$colon(Traversable.scala:105)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec.treeFromList(Lab1Spec.scala:160)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$16.apply$mcV$sp(Lab1Spec.scala:163)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$16.apply(Lab1Spec.scala:162)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32minsert-delete[0m[0m
[0m[[0minfo[0m] [0m[31m- should produce tress that satisfy repOk *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.insert(Lab1.scala:146)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$17$$anonfun$23$$anonfun$apply$1.apply(Lab1Spec.scala:170)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$17$$anonfun$23$$anonfun$apply$1.apply(Lab1Spec.scala:170)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$17$$anonfun$apply$mcV$sp$5.apply(Lab1Spec.scala:174)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$17$$anonfun$apply$mcV$sp$5.apply(Lab1Spec.scala:173)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:111)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.immutable.List.foldLeft(List.scala:84)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.TraversableOnce$class.$div$colon(TraversableOnce.scala:138)[0m[0m
[0m[[0minfo[0m] [0m[31m  at scala.collection.AbstractTraversable.$div$colon(Traversable.scala:105)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$17.apply$mcV$sp(Lab1Spec.scala:172)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32meval+[0m[0m
[0m[[0minfo[0m] [0m[31m- should perform addition *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$18.apply$mcV$sp(Lab1Spec.scala:184)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$18.apply(Lab1Spec.scala:184)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$18.apply(Lab1Spec.scala:184)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32meval-[0m[0m
[0m[[0minfo[0m] [0m[31m- should perform subtraction *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$19.apply$mcV$sp(Lab1Spec.scala:188)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$19.apply(Lab1Spec.scala:188)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$19.apply(Lab1Spec.scala:188)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32meval*[0m[0m
[0m[[0minfo[0m] [0m[31m- should perform multiplication *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$20.apply$mcV$sp(Lab1Spec.scala:192)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$20.apply(Lab1Spec.scala:192)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$20.apply(Lab1Spec.scala:192)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32meval/[0m[0m
[0m[[0minfo[0m] [0m[31m- should perform division *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$21.apply$mcV$sp(Lab1Spec.scala:196)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$21.apply(Lab1Spec.scala:196)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$21.apply(Lab1Spec.scala:196)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
[0m[[0minfo[0m] [0m[32meval/0[0m[0m
[0m[[0minfo[0m] [0m[31m- should division by 0 should yield Infinity *** FAILED ***[0m[0m
[0m[[0minfo[0m] [0m[31m  java.lang.UnsupportedOperationException:[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:164)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1$.eval(Lab1.scala:169)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$22.apply$mcV$sp(Lab1Spec.scala:200)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$22.apply(Lab1Spec.scala:199)[0m[0m
[0m[[0minfo[0m] [0m[31m  at Lab1Spec$$anonfun$22.apply(Lab1Spec.scala:199)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0minfo[0m] [0m[31m  at org.scalatest.Transformer.apply(Transformer.scala:22)[0m[0m
[0m[[0minfo[0m] [0m[31m  ...[0m[0m
